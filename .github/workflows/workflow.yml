name: CI/CD Pipeline

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

env:
  REGISTRY: ghcr.io
  SERVER_IMAGE_NAME: ${{ github.repository }}-server
  CLIENT_IMAGE_NAME: ${{ github.repository }}-client

jobs:
  lint:
    name: Lint (simulated)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Simulate linting
        run: |
          echo "✅ Linting completed successfully"

  test:
    name: Test (simulated)
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Simulate testing
        run: |
          echo "✅ Testing completed successfully"

  build:
    name: Build and Push Docker Images
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - id: meta-server
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.SERVER_IMAGE_NAME }}
          tags: |
            type=sha,format=short
            type=ref,event=branch
            latest

      - id: meta-client
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.CLIENT_IMAGE_NAME }}
          tags: |
            type=sha,format=short
            type=ref,event=branch
            latest

      - name: Build and push server image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./server/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-server.outputs.tags }}
          labels: ${{ steps.meta-server.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push client image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./client/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-client.outputs.tags }}
          labels: ${{ steps.meta-client.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    permissions:
      contents: write
      packages: write
    name: Update Kubernetes manifests
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v4
      - run: |
          # Update image tags in the manifests
          sed -i "s|image:.*server:.*|image: ${{ env.REGISTRY }}/${{ env.SERVER_IMAGE_NAME }}:sha-$(git rev-parse --short HEAD)|g" k8s/server.yaml
          sed -i "s|image:.*client:.*|image: ${{ env.REGISTRY }}/${{ env.CLIENT_IMAGE_NAME }}:sha-$(git rev-parse --short HEAD)|g" k8s/client.yaml

      - name: Commit and push updated manifests
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add k8s/
          git commit -m "Update image tags [skip ci]" || echo "No changes to commit"
          git push
